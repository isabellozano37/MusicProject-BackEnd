// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ServiceContext))]
    partial class ServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Categories", b =>
                {
                    b.Property<int>("Id_Categories")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Categories"));

                    b.Property<string>("Name_Categories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Categories");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("Entities.DetailList", b =>
                {
                    b.Property<int>("Id_DetailList")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_DetailList"));

                    b.Property<int>("Id_MyLists")
                        .HasColumnType("int");

                    b.Property<int>("Id_Product")
                        .HasColumnType("int");

                    b.HasKey("Id_DetailList");

                    b.HasIndex("Id_MyLists");

                    b.HasIndex("Id_Product");

                    b.ToTable("DetailList", (string)null);
                });

            modelBuilder.Entity("Entities.MyLists", b =>
                {
                    b.Property<int>("Id_MyLists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_MyLists"));

                    b.Property<int>("Id_Users")
                        .HasColumnType("int");

                    b.Property<string>("Name_List")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_MyLists");

                    b.HasIndex("Id_Users");

                    b.ToTable("MyLists", (string)null);
                });

            modelBuilder.Entity("Entities.Products", b =>
                {
                    b.Property<int>("Id_Product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Product"));

                    b.Property<string>("Audio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Categories")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SongName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Product");

                    b.HasIndex("Id_Categories");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Entities.Roll", b =>
                {
                    b.Property<int>("Id_Roll")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Roll"));

                    b.Property<string>("Name_Roll")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Roll");

                    b.ToTable("Roll", (string)null);
                });

            modelBuilder.Entity("Entities.Users", b =>
                {
                    b.Property<int>("Id_Users")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Users"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Roll")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Users");

                    b.HasIndex("Id_Roll");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Entities.DetailList", b =>
                {
                    b.HasOne("Entities.MyLists", "MyLists")
                        .WithMany("DetailList")
                        .HasForeignKey("Id_MyLists")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Products", "Products")
                        .WithMany("DetailList")
                        .HasForeignKey("Id_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MyLists");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Entities.MyLists", b =>
                {
                    b.HasOne("Entities.Users", "Users")
                        .WithMany("MyLists")
                        .HasForeignKey("Id_Users")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Entities.Products", b =>
                {
                    b.HasOne("Entities.Categories", "Categories")
                        .WithMany("Products")
                        .HasForeignKey("Id_Categories")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Entities.Users", b =>
                {
                    b.HasOne("Entities.Roll", "Roll")
                        .WithMany()
                        .HasForeignKey("Id_Roll")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roll");
                });

            modelBuilder.Entity("Entities.Categories", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Entities.MyLists", b =>
                {
                    b.Navigation("DetailList");
                });

            modelBuilder.Entity("Entities.Products", b =>
                {
                    b.Navigation("DetailList");
                });

            modelBuilder.Entity("Entities.Users", b =>
                {
                    b.Navigation("MyLists");
                });
#pragma warning restore 612, 618
        }
    }
}
